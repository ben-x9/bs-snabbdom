// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

import * as List  from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";

function get_state(store) {
  return store[/* state */0];
}

function dispatch(store, action) {
  return Curry._2(store[/* dispatcher */1], store, action);
}

function on_change(store, callback) {
  store[/* on_change */2] = List.append(store[/* on_change */2], /* :: */[
        callback,
        /* [] */0
      ]);
  return /* () */0;
}

function reduce_and_update_store(reducer, store, action) {
  var new_state = Curry._2(reducer, store[/* state */0], action);
  store[/* state */0] = new_state;
  return List.iter((function (cb) {
                return Curry._1(cb, store);
              }), store[/* on_change */2]);
}

function create_store(initial_state, reducer) {
  return /* record */[
          /* state */initial_state,
          /* dispatcher */(function (param, param$1) {
              return reduce_and_update_store(reducer, param, param$1);
            }),
          /* on_change : [] */0
        ];
}

function create_store_with_middleware(initial_state, reducer, middleware) {
  return /* record */[
          /* state */initial_state,
          /* dispatcher */Curry._1(middleware, (function (param, param$1) {
                  return reduce_and_update_store(reducer, param, param$1);
                })),
          /* on_change : [] */0
        ];
}

export {
  get_state                    ,
  dispatch                     ,
  on_change                    ,
  reduce_and_update_store      ,
  create_store                 ,
  create_store_with_middleware ,
  
}
/* No side effect */
