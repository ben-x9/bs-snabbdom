// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

import * as List                  from "bs-platform/lib/es6/list.js";
import * as Block                 from "bs-platform/lib/es6/block.js";
import * as Curry                 from "bs-platform/lib/es6/curry.js";
import * as Pervasives            from "bs-platform/lib/es6/pervasives.js";
import * as Snabbdom_base         from "./snabbdom_base.js";
import * as Snabbdom_html         from "./snabbdom_html.js";
import * as Snabbdom_props        from "./snabbdom_props.js";
import * as Caml_exceptions       from "bs-platform/lib/es6/caml_exceptions.js";
import * as Snabbdom_events       from "./snabbdom_events.js";
import * as Snabbdom_simple_store from "./snabbdom_simple_store.js";

var patch = Curry._1(Snabbdom_base.init, /* array */[
      Snabbdom_base.module_props,
      Snabbdom_base.module_eventlisteners,
      Snabbdom_base.module_style
    ]);

function many_items(_items, _i, max) {
  while(true) {
    var i = _i;
    var items = _items;
    if (i >= max) {
      return items;
    } else {
      _i = i + 1 | 0;
      _items = List.append(/* :: */[
            "Item " + Pervasives.string_of_int(i),
            /* [] */0
          ], items);
      continue ;
      
    }
  };
}

function checkbox(checked, onCheck, label_text) {
  return Snabbdom_html.label(/* :: */[
              /* Children */Block.__(7, [/* :: */[
                    Snabbdom_html.input(/* :: */[
                          Snabbdom_events.change(onCheck),
                          /* :: */[
                            Snabbdom_props.prop("type", "checkbox"),
                            /* :: */[
                              Snabbdom_props.prop("checked", checked ? "checked" : ""),
                              /* [] */0
                            ]
                          ]
                        ]),
                    /* :: */[
                      Snabbdom_html.span(/* :: */[
                            Snabbdom_props.style("font-weight", "bold"),
                            /* :: */[
                              /* Text */Block.__(0, [label_text]),
                              /* [] */0
                            ]
                          ]),
                      /* [] */0
                    ]
                  ]]),
              /* [] */0
            ]);
}

function item(store, s) {
  var del = function () {
    return Snabbdom_simple_store.dispatch(store, /* Delete */Block.__(1, [s]));
  };
  return Snabbdom_html.h("tr", /* :: */[
              /* Key */Block.__(10, [s]),
              /* :: */[
                Snabbdom_props.style("line-height", "0"),
                /* :: */[
                  Snabbdom_props.style("opacity", "1"),
                  /* :: */[
                    Snabbdom_props.style("transition", "line-height 0.3s, opacity 0.3s"),
                    /* :: */[
                      /* StyleDelay */Block.__(2, [/* tuple */[
                            "line-height",
                            "1"
                          ]]),
                      /* :: */[
                        /* StyleRemove */Block.__(3, [/* tuple */[
                              "line-height",
                              "0"
                            ]]),
                        /* :: */[
                          /* StyleRemove */Block.__(3, [/* tuple */[
                                "opacity",
                                "0"
                              ]]),
                          /* :: */[
                            /* Children */Block.__(7, [/* :: */[
                                  Snabbdom_html.h("td", /* :: */[
                                        /* Children */Block.__(7, [/* :: */[
                                              Snabbdom_html.h("a", /* :: */[
                                                    Snabbdom_props.prop("href", "javascript:;"),
                                                    /* :: */[
                                                      Snabbdom_events.mousemove(del),
                                                      /* :: */[
                                                        /* Text */Block.__(0, [s]),
                                                        /* [] */0
                                                      ]
                                                    ]
                                                  ]),
                                              /* [] */0
                                            ]]),
                                        /* [] */0
                                      ]),
                                  /* [] */0
                                ]]),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function view(store) {
  var state = Snabbdom_simple_store.get_state(store);
  var cb = function (action, ev) {
    ev.preventDefault();
    ev.stopPropagation();
    return Snabbdom_simple_store.dispatch(store, action);
  };
  var onChange = function (ev) {
    return Snabbdom_events.next_tick((function () {
                  var value = ev.target.value;
                  return Snabbdom_simple_store.dispatch(store, /* SetText */Block.__(0, [value]));
                }));
  };
  var onCheck = function (ev) {
    var value = +ev.target.checked;
    return Snabbdom_simple_store.dispatch(store, /* ToggleShow */Block.__(2, [value]));
  };
  return Snabbdom_html.div(/* :: */[
              /* Children */Block.__(7, [/* :: */[
                    Snabbdom_html.h1(/* :: */[
                          /* Text */Block.__(0, ["Hello " + Pervasives.string_of_int(state[/* count */0])]),
                          /* [] */0
                        ]),
                    /* :: */[
                      Snabbdom_html.p(/* :: */[
                            /* Text */Block.__(0, ["This is some paragraph text. " + state[/* name */1]]),
                            /* [] */0
                          ]),
                      /* :: */[
                        Snabbdom_html.input(/* :: */[
                              Snabbdom_events.keydown(onChange),
                              /* :: */[
                                Snabbdom_props.prop("placeholder", "Some placeholder text"),
                                /* :: */[
                                  Snabbdom_props.prop("value", state[/* name */1]),
                                  /* [] */0
                                ]
                              ]
                            ]),
                        /* :: */[
                          Snabbdom_html.button(/* :: */[
                                Snabbdom_events.click((function (param) {
                                        return cb(/* AddItem */2, param);
                                      })),
                                /* :: */[
                                  /* Text */Block.__(0, ["Add"]),
                                  /* [] */0
                                ]
                              ]),
                          /* :: */[
                            Snabbdom_html.button(/* :: */[
                                  Snabbdom_events.click((function (param) {
                                          return cb(/* Increment */0, param);
                                        })),
                                  /* :: */[
                                    /* Text */Block.__(0, ["+"]),
                                    /* [] */0
                                  ]
                                ]),
                            /* :: */[
                              Snabbdom_html.button(/* :: */[
                                    Snabbdom_events.click((function (param) {
                                            return cb(/* Decrement */1, param);
                                          })),
                                    /* :: */[
                                      /* Text */Block.__(0, ["-"]),
                                      /* [] */0
                                    ]
                                  ]),
                              /* :: */[
                                checkbox(state[/* show_items */4], onCheck, "This is some label"),
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]]),
              /* :: */[
                state[/* show_items */4] ? /* Children */Block.__(7, [/* :: */[
                        Snabbdom_base.h("table", /* :: */[
                              Snabbdom_props.prop("border", "1"),
                              /* :: */[
                                /* Children */Block.__(7, [List.map((function (param) {
                                            return item(store, param);
                                          }), state[/* items */2])]),
                                /* [] */0
                              ]
                            ]),
                        /* [] */0
                      ]]) : /* Ignore */0,
                /* [] */0
              ]
            ]);
}

var No_root_element = Caml_exceptions.create("Snabbdom_demo.No_root_element");

var match = Curry._2(Snabbdom_base.get_element_by_id, Snabbdom_base.$$document, "app");

var $js;

if (match) {
  $js = Curry._1(Snabbdom_base.vnode_of_dom, match[0]);
} else {
  throw No_root_element;
}

var vnode = [$js];

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0] + 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 1 : 
          return /* record */[
                  /* count */state[/* count */0] - 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 2 : 
          var item_name = state[/* name */1] + (": " + Pervasives.string_of_int(state[/* count */0]));
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */"",
                  /* items */List.append(/* :: */[
                        item_name,
                        /* [] */0
                      ], state[/* items */2]),
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 3 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging : true */1,
                  /* show_items */state[/* show_items */4]
                ];
      case 4 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging : false */0,
                  /* show_items */state[/* show_items */4]
                ];
      
    }
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */action[0],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 1 : 
          var s = action[0];
          var no_name_match = function (item) {
            return +(item !== s);
          };
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */List.filter(no_name_match)(state[/* items */2]),
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 2 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */action[0]
                ];
      
    }
  }
}

function logging_middleware(store, next, action) {
  console.log("Action:");
  console.log(action);
  Curry._1(next, action);
  console.log("New state:");
  console.log(Snabbdom_simple_store.get_state(store));
  return /* () */0;
}

function render(view, store) {
  var newVnode = Curry._1(view, store);
  Curry._2(patch, vnode[0], newVnode);
  vnode[0] = newVnode;
  return /* () */0;
}

function main() {
  var store = Snabbdom_simple_store.create_store_with_middleware(/* record */[
        /* count */0,
        /* name */"",
        /* items */many_items(/* [] */0, 0, 500),
        /* dragging : false */0,
        /* show_items : false */0
      ], reducer, logging_middleware);
  Snabbdom_simple_store.on_change(store, (function (param) {
          return render(view, param);
        }));
  render(view, store);
  return /* () */0;
}

main(/* () */0);

var Html = 0;

var Events = 0;

var Store = 0;

export {
  Html               ,
  Events             ,
  Store              ,
  patch              ,
  many_items         ,
  checkbox           ,
  item               ,
  view               ,
  No_root_element    ,
  vnode              ,
  reducer            ,
  logging_middleware ,
  render             ,
  main               ,
  
}
/* patch Not a pure module */
