// Generated by BUCKLESCRIPT VERSION 1.8.2, PLEASE EDIT WITH CARE
'use strict';

import * as List                                      from "bs-platform/lib/es6/list.js";
import * as Block                                     from "bs-platform/lib/es6/block.js";
import * as Curry                                     from "bs-platform/lib/es6/curry.js";
import * as Pervasives                                from "bs-platform/lib/es6/pervasives.js";
import * as Snabbdom_base                             from "./snabbdom_base.js";
import * as Snabbdom_props                            from "./snabbdom_props.js";
import * as Caml_exceptions                           from "bs-platform/lib/es6/caml_exceptions.js";
import * as Snabbdom_events                           from "./snabbdom_events.js";
import * as Snabbdom_external                         from "./snabbdom_external.js";
import * as Snabbdom_simple_store                     from "./snabbdom_simple_store.js";
import * as Snabbdom$slashmodules$slashprops          from "snabbdom/modules/props";
import * as Snabbdom$slashmodules$slasheventlisteners from "snabbdom/modules/eventlisteners";

var patch = Snabbdom_external.init(/* array */[
      Snabbdom$slashmodules$slashprops.default,
      Snabbdom$slashmodules$slasheventlisteners.default,
      Snabbdom_base.module_style
    ]);

function many_items(_items, _i, max) {
  while(true) {
    var i = _i;
    var items = _items;
    if (i >= max) {
      return items;
    } else {
      _i = i + 1 | 0;
      _items = List.append(/* :: */[
            "Item " + Pervasives.string_of_int(i),
            /* [] */0
          ], items);
      continue ;
      
    }
  };
}

function checkbox(checked, onCheck, label_text) {
  var partial_arg_000 = Snabbdom_base.h("input", /* :: */[
        Snabbdom_events.change(onCheck),
        /* :: */[
          Snabbdom_props.prop("type", "checkbox"),
          /* :: */[
            Snabbdom_props.prop("checked", checked ? "checked" : ""),
            /* [] */0
          ]
        ]
      ]);
  var partial_arg_001 = /* :: */[
    Snabbdom_base.h("span", /* :: */[
          Snabbdom_base.style("font-weight", "bold"),
          /* :: */[
            (function (param) {
                return Snabbdom_base.text(label_text, param);
              }),
            /* [] */0
          ]
        ]),
    /* [] */0
  ];
  var partial_arg = /* :: */[
    partial_arg_000,
    partial_arg_001
  ];
  return Snabbdom_base.h("label", /* :: */[
              (function (param) {
                  return Snabbdom_base.children(partial_arg, param);
                }),
              /* [] */0
            ]);
}

function item(store, s) {
  var del = function () {
    return Snabbdom_simple_store.dispatch(store, /* Delete */Block.__(1, [s]));
  };
  var partial_arg_000 = Snabbdom_base.h("a", /* :: */[
        Snabbdom_props.prop("href", "javascript:;"),
        /* :: */[
          Snabbdom_events.mousemove(del),
          /* :: */[
            (function (param) {
                return Snabbdom_base.text(s, param);
              }),
            /* [] */0
          ]
        ]
      ]);
  var partial_arg = /* :: */[
    partial_arg_000,
    /* [] */0
  ];
  var partial_arg_000$1 = Snabbdom_base.h("td", /* :: */[
        (function (param) {
            return Snabbdom_base.children(partial_arg, param);
          }),
        /* [] */0
      ]);
  var partial_arg$1 = /* :: */[
    partial_arg_000$1,
    /* [] */0
  ];
  return Snabbdom_base.h("tr", /* :: */[
              Snabbdom_base.key(s),
              /* :: */[
                Snabbdom_base.style("line-height", "0"),
                /* :: */[
                  Snabbdom_base.style("opacity", "1"),
                  /* :: */[
                    Snabbdom_base.style("transition", "line-height 0.3s, opacity 0.3s"),
                    /* :: */[
                      Snabbdom_base.style_delayed("line-height", "1"),
                      /* :: */[
                        Snabbdom_base.style_remove("line-height", "0"),
                        /* :: */[
                          Snabbdom_base.style_remove("opacity", "0"),
                          /* :: */[
                            (function (param) {
                                return Snabbdom_base.children(partial_arg$1, param);
                              }),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function view(store) {
  var state = Snabbdom_simple_store.get_state(store);
  var cb = function (action, ev) {
    Snabbdom_external.Dom[/* prevent_default */4](ev);
    Snabbdom_external.Dom[/* stop_propagation */3](ev);
    return Snabbdom_simple_store.dispatch(store, action);
  };
  var onChange = function (ev) {
    return Snabbdom_events.next_tick((function () {
                  var value = Snabbdom_external.Dom[/* get_value */6](Snabbdom_external.Dom[/* get_target */5](ev));
                  return Snabbdom_simple_store.dispatch(store, /* SetText */Block.__(0, [value]));
                }));
  };
  var onCheck = function (ev) {
    var value = Snabbdom_external.Dom[/* is_checked */7](Snabbdom_external.Dom[/* get_target */5](ev));
    return Snabbdom_simple_store.dispatch(store, /* ToggleShow */Block.__(2, [value]));
  };
  var partial_arg = "Count: " + Pervasives.string_of_int(state[/* count */0]);
  var partial_arg$1 = "bs-snabbdom demo. " + state[/* name */1];
  var partial_arg_000 = Snabbdom_base.h("input", /* :: */[
        Snabbdom_events.keydown(onChange),
        /* :: */[
          Snabbdom_props.prop("placeholder", "Type something, click Add"),
          /* :: */[
            Snabbdom_props.prop("value", state[/* name */1]),
            /* [] */0
          ]
        ]
      ]);
  var partial_arg_001 = /* :: */[
    Snabbdom_base.h("button", /* :: */[
          Snabbdom_events.click((function (param) {
                  return cb(/* AddItem */2, param);
                })),
          /* :: */[
            (function (param) {
                return Snabbdom_base.text("Add", param);
              }),
            /* [] */0
          ]
        ]),
    /* [] */0
  ];
  var partial_arg$2 = /* :: */[
    partial_arg_000,
    partial_arg_001
  ];
  var partial_arg_000$1 = Snabbdom_base.h("h1", /* :: */[
        (function (param) {
            return Snabbdom_base.text(partial_arg, param);
          }),
        /* [] */0
      ]);
  var partial_arg_001$1 = /* :: */[
    Snabbdom_base.h("button", /* :: */[
          Snabbdom_events.click((function (param) {
                  return cb(/* Increment */0, param);
                })),
          /* :: */[
            (function (param) {
                return Snabbdom_base.text("+", param);
              }),
            /* [] */0
          ]
        ]),
    /* :: */[
      Snabbdom_base.h("button", /* :: */[
            Snabbdom_events.click((function (param) {
                    return cb(/* Decrement */1, param);
                  })),
            /* :: */[
              (function (param) {
                  return Snabbdom_base.text("-", param);
                }),
              /* [] */0
            ]
          ]),
      /* :: */[
        Snabbdom_base.h("p", /* :: */[
              (function (param) {
                  return Snabbdom_base.text(partial_arg$1, param);
                }),
              /* [] */0
            ]),
        /* :: */[
          Snabbdom_base.h("div", /* :: */[
                (function (param) {
                    return Snabbdom_base.children(partial_arg$2, param);
                  }),
                /* [] */0
              ]),
          /* :: */[
            checkbox(state[/* show_items */3], onCheck, "Show item list"),
            /* [] */0
          ]
        ]
      ]
    ]
  ];
  var partial_arg$3 = /* :: */[
    partial_arg_000$1,
    partial_arg_001$1
  ];
  var $js;
  if (state[/* show_items */3]) {
    var partial_arg_000$2 = Snabbdom_base.h("td", /* :: */[
          (function (param) {
              return Snabbdom_base.text("Mouse over to delete", param);
            }),
          /* [] */0
        ]);
    var partial_arg$4 = /* :: */[
      partial_arg_000$2,
      /* [] */0
    ];
    var partial_arg_000$3 = Snabbdom_base.h("tr", /* :: */[
          (function (param) {
              return Snabbdom_base.children(partial_arg$4, param);
            }),
          /* [] */0
        ]);
    var partial_arg$5 = /* :: */[
      partial_arg_000$3,
      /* [] */0
    ];
    var partial_arg$6 = List.map((function (param) {
            return item(store, param);
          }), state[/* items */2]);
    var partial_arg_000$4 = Snabbdom_base.h("table", /* :: */[
          (function (param) {
              return Snabbdom_base.children(partial_arg$5, param);
            }),
          /* :: */[
            Snabbdom_props.prop("border", "1"),
            /* :: */[
              (function (param) {
                  return Snabbdom_base.children(partial_arg$6, param);
                }),
              /* [] */0
            ]
          ]
        ]);
    var partial_arg$7 = /* :: */[
      partial_arg_000$4,
      /* [] */0
    ];
    $js = (function (param) {
        return Snabbdom_base.children(partial_arg$7, param);
      });
  } else {
    $js = Snabbdom_base.nothing;
  }
  return Snabbdom_base.h("div", /* :: */[
              (function (param) {
                  return Snabbdom_base.children(partial_arg$3, param);
                }),
              /* :: */[
                $js,
                /* [] */0
              ]
            ]);
}

var No_root_element = Caml_exceptions.create("Snabbdom_demo.No_root_element");

var match = Snabbdom_external.Dom[/* get_element_by_id */2](Snabbdom_external.Dom[/* document */1], "app");

var $js;

if (match) {
  $js = Snabbdom_external.VNode[/* of_dom_element */1](match[0]);
} else {
  throw No_root_element;
}

var vnode = [$js];

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0] + 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* show_items */state[/* show_items */3]
                ];
      case 1 : 
          return /* record */[
                  /* count */state[/* count */0] - 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* show_items */state[/* show_items */3]
                ];
      case 2 : 
          var item_name = state[/* name */1] + (": " + Pervasives.string_of_int(state[/* count */0]));
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */"",
                  /* items */List.append(/* :: */[
                        item_name,
                        /* [] */0
                      ], state[/* items */2]),
                  /* show_items */state[/* show_items */3]
                ];
      
    }
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */action[0],
                  /* items */state[/* items */2],
                  /* show_items */state[/* show_items */3]
                ];
      case 1 : 
          var s = action[0];
          var no_name_match = function (item) {
            return +(item !== s);
          };
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */List.filter(no_name_match)(state[/* items */2]),
                  /* show_items */state[/* show_items */3]
                ];
      case 2 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* show_items */action[0]
                ];
      
    }
  }
}

function logging_middleware(store, next, action) {
  console.log("Action:");
  console.log(action);
  Curry._1(next, action);
  console.log("New state:");
  console.log(Snabbdom_simple_store.get_state(store));
  return /* () */0;
}

function render(view, store) {
  var newVnode = Curry._1(view, store);
  Curry._2(patch, vnode[0], newVnode);
  vnode[0] = newVnode;
  return /* () */0;
}

function main() {
  var store = Snabbdom_simple_store.create_store_with_middleware(/* record */[
        /* count */0,
        /* name */"",
        /* items */many_items(/* [] */0, 0, 500),
        /* show_items : false */0
      ], reducer, logging_middleware);
  Snabbdom_simple_store.on_change(store, (function (param) {
          return render(view, param);
        }));
  render(view, store);
  return /* () */0;
}

main(/* () */0);

var Store = 0;

export {
  Store              ,
  patch              ,
  many_items         ,
  checkbox           ,
  item               ,
  view               ,
  No_root_element    ,
  vnode              ,
  reducer            ,
  logging_middleware ,
  render             ,
  main               ,
  
}
/* patch Not a pure module */
