// Generated by BUCKLESCRIPT VERSION 1.8.2, PLEASE EDIT WITH CARE
'use strict';

import * as List              from "bs-platform/lib/es6/list.js";
import * as $$Array           from "bs-platform/lib/es6/array.js";
import * as Curry             from "bs-platform/lib/es6/curry.js";
import * as Snabbdom          from "snabbdom";
import * as Pervasives        from "bs-platform/lib/es6/pervasives.js";
import * as Caml_exceptions   from "bs-platform/lib/es6/caml_exceptions.js";
import * as Snabbdom_external from "./snabbdom_external.js";

var Not_supported = Caml_exceptions.create("Snabbdom_base.Not_supported");

var Children_not_allowed_with_text = Caml_exceptions.create("Snabbdom_base.Children_not_allowed_with_text");

function empty_node_params() {
  return /* tuple */[
          Snabbdom_external.Data[/* empty */0](/* () */0),
          /* [] */0,
          /* None */0
        ];
}

function h(selector, transformers) {
  var transform = function (node_params, transformer) {
    return Curry._1(transformer, node_params);
  };
  var snabb_props = List.fold_left(transform, empty_node_params(/* () */0), transformers);
  var children = snabb_props[1];
  var data = snabb_props[0];
  if (snabb_props[2]) {
    if (children) {
      throw Children_not_allowed_with_text;
    } else {
      return Snabbdom.h(selector, data, snabb_props[2][0]);
    }
  } else {
    return Snabbdom.h(selector, data, $$Array.of_list(children));
  }
}

function set_data_path(path, value, param) {
  return /* tuple */[
          Snabbdom_external.Data[/* set_in_path */1](param[0], path, value),
          param[1],
          param[2]
        ];
}

function children(new_children, param) {
  return /* tuple */[
          param[0],
          Pervasives.$at(param[1], new_children),
          param[2]
        ];
}

function text(new_text, param) {
  return /* tuple */[
          param[0],
          param[1],
          /* Some */[new_text]
        ];
}

function key(key$1) {
  var partial_arg = /* array */["key"];
  return (function (param) {
      return set_data_path(partial_arg, key$1, param);
    });
}

function nothing(a) {
  return a;
}

function attr(key, value) {
  var partial_arg = /* array */[
    "attrs",
    key
  ];
  return (function (param) {
      return set_data_path(partial_arg, value, param);
    });
}

function class_name(key) {
  var partial_arg = true;
  var partial_arg$1 = /* array */[
    "class",
    key
  ];
  return (function (param) {
      return set_data_path(partial_arg$1, partial_arg, param);
    });
}

function style(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    style_attr
  ];
  return (function (param) {
      return set_data_path(partial_arg, value, param);
    });
}

function style_delayed(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    "delayed",
    style_attr
  ];
  return (function (param) {
      return set_data_path(partial_arg, value, param);
    });
}

function style_remove(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    "remove",
    style_attr
  ];
  return (function (param) {
      return set_data_path(partial_arg, value, param);
    });
}

var Ex = 0;

export {
  Ex                             ,
  Not_supported                  ,
  Children_not_allowed_with_text ,
  empty_node_params              ,
  h                              ,
  set_data_path                  ,
  children                       ,
  text                           ,
  key                            ,
  nothing                        ,
  attr                           ,
  class_name                     ,
  style                          ,
  style_delayed                  ,
  style_remove                   ,
  
}
/* snabbdom Not a pure module */
