// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

import * as Html                                      from "./html.js";
import * as List                                      from "bs-platform/lib/es6/list.js";
import * as Block                                     from "bs-platform/lib/es6/block.js";
import * as Curry                                     from "bs-platform/lib/es6/curry.js";
import * as Store                                     from "./store.js";
import * as Events                                    from "./events.js";
import * as Snabbdom                                  from "./snabbdom.js";
import * as Snabbdom$1                                from "snabbdom";
import * as Pervasives                                from "bs-platform/lib/es6/pervasives.js";
import * as Caml_exceptions                           from "bs-platform/lib/es6/caml_exceptions.js";
import * as Snabbdom$slashmodules$slashprops          from "snabbdom/modules/props";
import * as Snabbdom$slashmodules$slashstyle          from "snabbdom/modules/style";
import * as Snabbdom$slashmodules$slasheventlisteners from "snabbdom/modules/eventlisteners";

var patch = Snabbdom$1.init(/* array */[
      Snabbdom$slashmodules$slashprops.default,
      Snabbdom$slashmodules$slasheventlisteners.default,
      Snabbdom$slashmodules$slashstyle.default
    ]);

function many_items(_items, _i, max) {
  while(true) {
    var i = _i;
    var items = _items;
    if (i >= max) {
      return items;
    } else {
      _i = i + 1 | 0;
      _items = List.append(/* :: */[
            "Item " + Pervasives.string_of_int(i),
            /* [] */0
          ], items);
      continue ;
      
    }
  };
}

function checkbox(checked, onCheck, label_text) {
  return Html.label(/* :: */[
              /* Children */Block.__(6, [/* :: */[
                    Html.input(/* :: */[
                          /* EventListener */Block.__(7, [/* tuple */[
                                "change",
                                onCheck
                              ]]),
                          /* :: */[
                            Snabbdom.prop("type", "checkbox"),
                            /* :: */[
                              Snabbdom.prop("checked", checked ? "checked" : ""),
                              /* [] */0
                            ]
                          ]
                        ]),
                    /* :: */[
                      Html.span(/* :: */[
                            Snabbdom.style("font-weight", "bold"),
                            /* :: */[
                              /* Text */Block.__(0, [label_text]),
                              /* [] */0
                            ]
                          ]),
                      /* [] */0
                    ]
                  ]]),
              /* [] */0
            ]);
}

function item(store, s) {
  var del = function () {
    return Store.dispatch(store, /* Delete */Block.__(1, [s]));
  };
  return Html.h("tr", /* :: */[
              /* Key */Block.__(8, [s]),
              /* :: */[
                Snabbdom.style("line-height", "0"),
                /* :: */[
                  Snabbdom.style("opacity", "1"),
                  /* :: */[
                    Snabbdom.style("transition", "line-height 0.3s, opacity 0.3s"),
                    /* :: */[
                      /* StyleDelay */Block.__(2, [/* tuple */[
                            "line-height",
                            "1"
                          ]]),
                      /* :: */[
                        /* StyleRemove */Block.__(3, [/* tuple */[
                              "line-height",
                              "0"
                            ]]),
                        /* :: */[
                          /* StyleRemove */Block.__(3, [/* tuple */[
                                "opacity",
                                "0"
                              ]]),
                          /* :: */[
                            /* Children */Block.__(6, [/* :: */[
                                  Html.h("td", /* :: */[
                                        /* Children */Block.__(6, [/* :: */[
                                              Html.h("a", /* :: */[
                                                    Snabbdom.prop("href", "javascript:;"),
                                                    /* :: */[
                                                      /* EventListener */Block.__(7, [/* tuple */[
                                                            "mousemove",
                                                            del
                                                          ]]),
                                                      /* :: */[
                                                        /* Text */Block.__(0, [s]),
                                                        /* [] */0
                                                      ]
                                                    ]
                                                  ]),
                                              /* [] */0
                                            ]]),
                                        /* [] */0
                                      ]),
                                  /* [] */0
                                ]]),
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function view(store) {
  var state = Store.get_state(store);
  var cb = function (action, ev) {
    ev.preventDefault();
    ev.stopPropagation();
    return Store.dispatch(store, action);
  };
  var onChange = function (ev) {
    return Events.next_tick((function () {
                  var value = ev.target.value;
                  return Store.dispatch(store, /* SetText */Block.__(0, [value]));
                }));
  };
  var onCheck = function (ev) {
    var value = +ev.target.checked;
    return Store.dispatch(store, /* ToggleShow */Block.__(2, [value]));
  };
  return Html.div(/* :: */[
              /* Children */Block.__(6, [/* :: */[
                    Html.h1(/* :: */[
                          /* Text */Block.__(0, ["Hello " + Pervasives.string_of_int(state[/* count */0])]),
                          /* [] */0
                        ]),
                    /* :: */[
                      Html.p(/* :: */[
                            /* Text */Block.__(0, ["This is some paragraph text. " + state[/* name */1]]),
                            /* [] */0
                          ]),
                      /* :: */[
                        Html.input(/* :: */[
                              /* EventListener */Block.__(7, [/* tuple */[
                                    "keydown",
                                    onChange
                                  ]]),
                              /* :: */[
                                Snabbdom.prop("placeholder", "Some placeholder text"),
                                /* :: */[
                                  Snabbdom.prop("value", state[/* name */1]),
                                  /* [] */0
                                ]
                              ]
                            ]),
                        /* :: */[
                          Html.button(/* :: */[
                                /* EventListener */Block.__(7, [/* tuple */[
                                      "click",
                                      (function (param) {
                                          return cb(/* AddItem */2, param);
                                        })
                                    ]]),
                                /* :: */[
                                  /* Text */Block.__(0, ["Add"]),
                                  /* [] */0
                                ]
                              ]),
                          /* :: */[
                            Html.button(/* :: */[
                                  /* EventListener */Block.__(7, [/* tuple */[
                                        "click",
                                        (function (param) {
                                            return cb(/* Increment */0, param);
                                          })
                                      ]]),
                                  /* :: */[
                                    /* Text */Block.__(0, ["+"]),
                                    /* [] */0
                                  ]
                                ]),
                            /* :: */[
                              Html.button(/* :: */[
                                    /* EventListener */Block.__(7, [/* tuple */[
                                          "click",
                                          (function (param) {
                                              return cb(/* Decrement */1, param);
                                            })
                                        ]]),
                                    /* :: */[
                                      /* Text */Block.__(0, ["-"]),
                                      /* [] */0
                                    ]
                                  ]),
                              /* :: */[
                                checkbox(state[/* show_items */4], onCheck, "This is some label"),
                                /* [] */0
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]]),
              /* :: */[
                state[/* show_items */4] ? /* Children */Block.__(6, [/* :: */[
                        Snabbdom.h("table", /* :: */[
                              Snabbdom.prop("border", "1"),
                              /* :: */[
                                /* Children */Block.__(6, [List.map((function (param) {
                                            return item(store, param);
                                          }), state[/* items */2])]),
                                /* [] */0
                              ]
                            ]),
                        /* [] */0
                      ]]) : /* Ignore */0,
                /* [] */0
              ]
            ]);
}

var No_root_element = Caml_exceptions.create("Demo.No_root_element");

var match = document.getElementById("app");

var $js;

if (match !== null) {
  $js = match;
} else {
  throw No_root_element;
}

var vnode = [$js];

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0] + 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 1 : 
          return /* record */[
                  /* count */state[/* count */0] - 1 | 0,
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 2 : 
          var item_name = state[/* name */1] + (": " + Pervasives.string_of_int(state[/* count */0]));
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */"",
                  /* items */List.append(/* :: */[
                        item_name,
                        /* [] */0
                      ], state[/* items */2]),
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 3 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging : true */1,
                  /* show_items */state[/* show_items */4]
                ];
      case 4 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging : false */0,
                  /* show_items */state[/* show_items */4]
                ];
      
    }
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */action[0],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 1 : 
          var s = action[0];
          var no_name_match = function (item) {
            return +(item !== s);
          };
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */List.filter(no_name_match)(state[/* items */2]),
                  /* dragging */state[/* dragging */3],
                  /* show_items */state[/* show_items */4]
                ];
      case 2 : 
          return /* record */[
                  /* count */state[/* count */0],
                  /* name */state[/* name */1],
                  /* items */state[/* items */2],
                  /* dragging */state[/* dragging */3],
                  /* show_items */action[0]
                ];
      
    }
  }
}

function logging_middleware(next, store, action) {
  console.log("Action:");
  console.log(action);
  Curry._2(next, store, action);
  console.log("New state:");
  console.log(Store.get_state(store));
  return /* () */0;
}

function render(view, store) {
  var newVnode = Curry._1(view, store);
  Curry._2(patch, vnode[0], newVnode);
  vnode[0] = newVnode;
  return /* () */0;
}

function main() {
  var store = Store.create_store_with_middleware(/* record */[
        /* count */0,
        /* name */"",
        /* items */many_items(/* [] */0, 0, 500),
        /* dragging : false */0,
        /* show_items : false */0
      ], reducer, logging_middleware);
  Store.on_change(store, (function (param) {
          return render(view, param);
        }));
  render(view, store);
  return /* () */0;
}

main(/* () */0);

export {
  patch              ,
  many_items         ,
  checkbox           ,
  item               ,
  view               ,
  No_root_element    ,
  vnode              ,
  reducer            ,
  logging_middleware ,
  render             ,
  main               ,
  
}
/* patch Not a pure module */
