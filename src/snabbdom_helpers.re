module Base = Snabbdom_base;

let tag a b c => Base.h a (List.append b [Base.children c]);
let childlessTag = Base.h;

let a b c => tag "a" b c;
let abbr b c => tag "abbr" b c;
let address b c => tag "address" b c;
let article b c => tag "article" b c;
let aside b c => tag "aside" b c;
let audio b c => tag "audio" b c;
let b b' c => tag "b" b' c;
let bdi b c => tag "bdi" b c;
let bdo b c => tag "bdo" b c;
let big b c => tag "big" b c;
let blockquote b c => tag "blockquote" b c;
let body b c => tag "body" b c;
let button b c => tag "button" b c;
let canvas b c => tag "canvas" b c;
let caption b c => tag "caption" b c;
let cite b c => tag "cite" b c;
let code b c => tag "code" b c;
let colgroup b c => tag "colgroup" b c;
let data b c => tag "data" b c;
let datalist b c => tag "datalist" b c;
let dd b c => tag "dd" b c;
let dtag b c => tag "del" b c;
let details b c => tag "details" b c;
let dfn b c => tag "dfn" b c;
let dialog b c => tag "dialog" b c;
let div b c => tag "div" b c;
let dl b c => tag "dl" b c;
let dt b c => tag "dt" b c;
let em b c => tag "em" b c;
let fieldset b c => tag "fieldset" b c;
let figcaption b c => tag "figcaption" b c;
let figure b c => tag "figure" b c;
let footer b c => tag "footer" b c;
let form b c => tag "form" b c;
let h1 b => childlessTag "h1" b;
let h2 b => childlessTag "h2" b;
let h3 b => childlessTag "h3" b;
let h4 b => childlessTag "h4" b;
let h5 b => childlessTag "h5" b;
let h6 b => childlessTag "h6" b;
let head b c => tag "head" b c;
let header b c => tag "header" b c;
let hgroup b c => tag "hgroup" b c;
let html b c => tag "html" b c;
let i b c => tag "i" b c;
let iframe b c => tag "iframe" b c;
let ins b c => tag "ins" b c;
let kbd b c => tag "kbd" b c;
let labtag b c => tag "label" b c;
let legend b c => tag "legend" b c;
let li b c => tag "li" b c;
let main b c => tag "main" b c;
let map b c => tag "map" b c;
let mark b c => tag "mark" b c;
let menu b c => tag "menu" b c;
let meter b c => tag "meter" b c;
let nav b c => tag "nav" b c;
let noscript b c => tag "noscript" b c;
let ol b c => tag "ol" b c;
let optgroup b c => tag "optgroup" b c;
let option b c => tag "option" b c;
let output b c => tag "output" b c;
let p b c => tag "p" b c;
let picture b c => tag "picture" b c;
let pre b c => tag "pre" b c;
let progress b c => tag "progress" b c;
let q b c => tag "q" b c;
let rp b c => tag "rp" b c;
let rt b c => tag "rt" b c;
let ruby b c => tag "ruby" b c;
let s b c => tag "s" b c;
let samp b c => tag "samp" b c;
let script b c => tag "script" b c;
let section b c => tag "section" b c;
let select b c => tag "select" b c;
let small b c => tag "small" b c;
let span b c => tag "span" b c;
let strong b c => tag "strong" b c;
/* let style b c => tag "style" b c; */
let sub b c => tag "sub" b c;
let summary b c => tag "summary" b c;
let sup b c => tag "sup" b c;
let table b c => tag "table" b c;
let tbody b c => tag "tbody" b c;
let td b c => tag "td" b c;
let textarea b c => tag "textarea" b c;
let tfoot b c => tag "tfoot" b c;
let ttag b c => tag "th" b c;
let thead b c => tag "thead" b c;
let time b c => tag "time" b c;
let title b c => tag "title" b c;
let tr b c => tag "tr" b c;
let u b c => tag "u" b c;
let ul b c => tag "ul" b c;
let var b c => tag "var" b c;
let video b c => tag "video" b c;

/* Void Elements */
let area b => childlessTag "area" b;
let base b => childlessTag "base" b;
let br b => childlessTag "br" b;
let col b => childlessTag "col" b;
let embed b => childlessTag "embed" b;
let hr b => childlessTag "hr" b;
let img b => childlessTag "img" b;
let input b => childlessTag "input" b;
let keygen b => childlessTag "keygen" b;
let link b => childlessTag "link" b;
let menuitem b => childlessTag "menuitem" b;
let meta b => childlessTag "meta" b;
let param b => childlessTag "param" b;
let source b => childlessTag "source" b;
let track b => childlessTag "track" b;
let wbr b => childlessTag "wbr" b;

/* SVG api */
let svg b c => tag "svg" b c;
let circle b c => tag "circle" b c;
let clipPattag b c => tag "clipPath" b c;
let defs b c => tag "defs" b c;
let ellipse b c => tag "ellipse" b c;
let g b c => tag "g" b c;
let image b c => tag "image" b c;
let line b c => tag "line" b c;
let linearGradient b c => tag "linearGradient" b c;
let mask b c => tag "mask" b c;
let pattag b c => tag "path" b c;
let pattern b c => tag "pattern" b c;
let polygon b c => tag "polygon" b c;
let polyline b c => tag "polyline" b c;
let radialGradient b c => tag "radialGradient" b c;
let rect b c => tag "rect" b c;
let stop b c => tag "stop" b c;
/* let text b c => tag "text" b c; */
let tspan b c => tag "tspan" b c;
